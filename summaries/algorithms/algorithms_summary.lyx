#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
% --- Load amsthm package for theorem styles ---
\usepackage{amsthm}

% --- Shared theoremstyle (one place only!) ---
\newtheoremstyle{defuprightbrackets}%
  {3pt}{3pt}% space above/below
  {\upshape}% body font
  {}% indent amount
  {\bfseries}% head font
  {.}% punctuation after theorem head
  { }% space after theorem head
  {\thmname{#1}\thmnumber{ #2}\thmnote{ [\textbf{\itshape #3}]}}%

% --- Apply this style to all environments ---
\theoremstyle{defuprightbrackets}

% --- Define all environments to use LyX's language macros ---
\ifx\thechapter\undefined
  \newtheorem{mytheorem}{\protect\theoremname}
\else
  \newtheorem{mytheorem}{\protect\theoremname}[chapter]
\fi

% --- All other environments share the 'mytheorem' counter ---
\newtheorem{mydefinition}[mytheorem]{\protect\definitionname}
\newtheorem{mylemma}[mytheorem]{\protect\lemmaname}
\newtheorem{myproposition}[mytheorem]{\protect\propositionname}
\newtheorem{mycorollary}[mytheorem]{\protect\corollaryname}
\newtheorem{myclaim}[mytheorem]{\protect\claimname}
\newtheorem{myconjecture}[mytheorem]{\protect\conjecturename}
\newtheorem{myremark}[mytheorem]{\protect\remarkname}
\newtheorem{myexample}[mytheorem]{\protect\examplename}
\newtheorem{myexercise}[mytheorem]{\protect\exercisename}
\newtheorem{myproblem}[mytheorem]{\protect\problemname}
\newtheorem{myfact}[mytheorem]{\protect\factname}
\newtheorem{mynotation}[mytheorem]{\protect\notationname}
\newtheorem{myassumption}[mytheorem]{\protect\assumptionname}
\newtheorem{mysummary}[mytheorem]{\protect\summaryname}
\newtheorem{myconclusion}[mytheorem]{\protect\conclusionname}
\newtheorem{myalgorithm}[mytheorem]{\protect\algorithmname}
\newtheorem{myaxiom}[mytheorem]{\protect\axiomname}
\newtheorem{mycondition}[mytheorem]{\protect\conditionname}
\newtheorem{myquestion}[mytheorem]{\protect\questionname}

% --- Unnumbered environments ---
\newtheorem*{mysolution}{\protect\solutionname}

% --- Optional: change QED symbol for proofs ---
\renewcommand{\qedsymbol}{$\square$}

% Allows fancy stuff in the page header
\usepackage{fancyhdr}
\pagestyle{fancy}

\usepackage{enumitem}
\setlist[itemize,1]{label={\fontfamily{cmr}\fontencoding{T1}\selectfont\textbullet}}

%Allows circuit drawing
\usepackage{circuitikz}

%Allows plotting graphs
\usepackage{pgfplots}

\usepackage{mathtools}
\let\savedleft\left
  \let\savedright\right

  % Redefine \left and \right to insert the pairing-group hack
  \renewcommand{\left}{\mathopen{}\mathclose\bgroup\savedleft}
  \renewcommand{\right}{\aftergroup\egroup\savedright}

% Necessary Commands:
\usepackage{autobreak}
\usepackage[T1]{fontenc}
\usepackage{relsize}
% Set vertical space before and after dislpay equations to be longer for better redability:
\AtBeginDocument{\setlength\abovedisplayskip{12pt}}
\AtBeginDocument{\setlength\belowdisplayskip{12pt}}
\AtBeginDocument{\setlength\belowdisplayshortskip{12pt}}
\AtBeginDocument{\setlength\belowdisplayshortskip{12pt}}

% Set space between words to be wider:
\spaceskip=1.3\fontdimen2\font plus 1\fontdimen3\font minus 1.5\fontdimen4\font

\usepackage{xcolor}


% Convert the QED Symbol at the end of proofs to a solid black square (credit: Yakir Oz):
\usepackage{amssymb}
\renewcommand{\qedsymbol}{$\blacksquare$}

% Make the layout more similar to Hebrew Article, which I am more used to:
\renewcommand*{\@seccntformat}[1]{\hspace{0.5cm}\csname the#1\endcsname\hspace{0.5cm}} 
\usepackage{titlesec}
\titleformat{\section}{\fontsize{20}{20}\bfseries}{\thesection}{10pt}{}
\titleformat{\subsection}{\fontsize{15}{15}\bfseries}{\thesubsection}{10pt}{}
\titleformat{\subsubsection}{\bfseries}{\thesubsubsection}{10pt}{}

% Correct the reversed parentheses in labels:
\usepackage{polyglossia}
\setmainlanguage{hebrew}
\newfontfamily{\hebrewfont}{David}
\makeatletter
\def\maketag@@@#1{\hbox{\m@th\normalfont\LRE{#1}}}
\def\tagform@#1{\maketag@@@{(\ignorespaces#1\unskip)}}
\makeatother

% Create disjoint union symbols:
\makeatletter
\def\moverlay{\mathpalette\mov@rlay}
\def\mov@rlay#1#2{\leavevmode\vtop{%
   \baselineskip\z@skip \lineskiplimit-\maxdimen
   \ialign{\hfil$\m@th#1##$\hfil\cr#2\crcr}}}
\newcommand{\charfusion}[3][\mathord]{
    #1{\ifx#1\mathop\vphantom{#2}\fi
        \mathpalette\mov@rlay{#2\cr#3}
      }
    \ifx#1\mathop\expandafter\displaylimits\fi}
\makeatother
\newcommand{\cupdot}{\charfusion[\mathbin]{\cup}{\cdot}}
\newcommand{\bigcupdot}{\charfusion[\mathop]{\bigcup}{\cdot}}


\newcommand{\kaliLargeLand}{\mathop{\mathlarger{\mathlarger{\mathlarger{\land}}}}}
\newcommand{\hebtext}[1]{\mbox{\R{\#1}}}


% --- Redefine the 'proof' environment to match LyX style ---
% (Bold, Upright Label; Upright Body; UNIFORM 3pt spacing)
\makeatletter
\renewenvironment{proof}[1][\proofname]{\par
  \pushQED{\qed}%
  \normalfont \topsep3pt\relax  % <-- THIS IS THE SPACING FIX
  \trivlist
  \item[\hskip\labelsep
        \bfseries
    #1\@addpunct{.}]\ignorespaces
}{%
  \popQED\endtrivlist\@endpefalse
}
\makeatother

\usepackage{enumitem}
\setlist[itemize,1]{label={\fontfamily{cmr}\fontencoding{T1}\selectfont\textbullet}}
\end_preamble
\options no-math
\use_default_options true
\begin_modules
customHeadersFooters
theorems-ams-chap-bytype
theorems-ams-extended-chap-bytype
\end_modules
\maintain_unincluded_children no
\begin_local_layout
Format 61
Input book.layout

# --- LyX Style Definitions using SHARED numbering display (\thetheorem.) ---
# Corrected based on user's example

Style Theorem
  Category Reasoning
  LatexType Environment
  LatexName mytheorem
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Theorem \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\theoremname}{_(Theorem)}
  EndLangPreamble
End

Style Claim
  Category Reasoning
  LatexType Environment
  LatexName myclaim
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Claim \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\claimname}{_(Claim)}
  EndLangPreamble
End

Style Corollary
  Category Reasoning
  LatexType Environment
  LatexName mycorollary
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Corollary \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\corname}{_(Corollary)}
    \providecommand{\corollaryname}{_(Corollary)}
  EndLangPreamble
End

Style Lemma
  Category Reasoning
  LatexType Environment
  LatexName mylemma
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Lemma \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\lemmaname}{_(Lemma)}
    \providecommand{\lemmaname}{_(Lemma)}
  EndLangPreamble
End

Style Proposition
  Category Reasoning
  LatexType Environment
  LatexName myproposition
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Proposition \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\propname}{_(Proposition)}
    \providecommand{\propositionname}{_(Proposition)}
  EndLangPreamble
End

Style Conjecture
  Category Reasoning
  LatexType Environment
  LatexName myconjecture
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Conjecture \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\conjname}{_(Conjecture)}
    \providecommand{\conjecturename}{_(Conjecture)}
  EndLangPreamble
End

Style Remark
  Category Reasoning
  LatexType Environment
  LatexName myremark
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Remark \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\remname}{_(Remark)}
    \providecommand{\remarkname}{_(Remark)}
  EndLangPreamble
End

Style Proof
  Category Reasoning
  LatexType Environment
  LatexName proof
  LabelString "Proof."
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\proofname}{_(Proof)}
  EndLangPreamble
End

Style Example
  Category Reasoning
  LatexType Environment
  LatexName myexample
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Example \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\examplename}{_(Example)}
  EndLangPreamble
End

Style Problem
  Category Reasoning
  LatexType Environment
  LatexName myproblem
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Problem \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\problemname}{_(Problem)}
  EndLangPreamble
End

Style Exercise
  Category Reasoning
  LatexType Environment
  LatexName myexercise
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Exercise \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\exercisename}{_(Exercise)}
  EndLangPreamble
End

Style Solution
  Category Reasoning
  LatexType Environment
  LatexName mysolution
  LabelString "Solution."
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\solutionname}{_(Solution)}
  EndLangPreamble
End

Style Fact
  Category Reasoning
  LatexType Environment
  LatexName myfact
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Fact \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\factname}{_(Fact)}
  EndLangPreamble
End

Style Criterion
  Category Reasoning
  LatexType Environment
  LatexName mycriterion
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Criterion \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\criterionname}{_(Criterion)}
  EndLangPreamble
End

Style Algorithm
  Category Reasoning
  LatexType Environment
  LatexName myalgorithm
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Algorithm \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\algorithmname}{_(Algorithm)}
  EndLangPreamble
End

Style Axiom
  Category Reasoning
  LatexType Environment
  LatexName myaxiom
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Axiom \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\axiomname}{_(Axiom)}
  EndLangPreamble
End

Style Condition
  Category Reasoning
  LatexType Environment
  LatexName mycondition
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Condition \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\conditionname}{_(Condition)}
  EndLangPreamble
End

Style Note
  Category Reasoning
  LatexType Environment
  LatexName mynote
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Note \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\notename}{_(Note)}
  EndLangPreamble
End

Style Notation
  Category Reasoning
  LatexType Environment
  LatexName mynotation
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Notation \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\notationname}{_(Notation)}
  EndLangPreamble
End

Style Summary
  Category Reasoning
  LatexType Environment
  LatexName mysummary
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Summary \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\summaryname}{_(Summary)}
  EndLangPreamble
End

Style Conclusion
  Category Reasoning
  LatexType Environment
  LatexName myconclusion
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Conclusion \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\conclusionname}{_(Conclusion)}
  EndLangPreamble
End

Style Assumption
  Category Reasoning
  LatexType Environment
  LatexName myassumption
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Assumption \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\assumptionname}{_(Assumption)}
  EndLangPreamble
End

Style Question
  Category Reasoning
  LatexType Environment
  LatexName myquestion
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Question \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\questionname}{_(Question)}
  EndLangPreamble
End

Style Definition
  Category Reasoning
  LatexType Environment
  LatexName mydefinition
  LabelCounter theorem  # Use 'theorem' counter for LyX display
  LabelString "Definition \thetheorem." # Use '\thetheorem' for LyX display
  Font
    Shape Up
    Size Normal
  EndFont
  LabelFont
    Shape Up
    Series Bold
  EndFont
  LangPreamble
    \providecommand{\definitionname}{_(Definition)}
  EndLangPreamble
End
\end_local_layout
\language hebrew
\language_package default
\inputencoding auto-legacy
\fontencoding auto
\font_roman "default" "David CLM"
\font_sans "default" "David CLM"
\font_typewriter "default" "David CLM"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\float_alignment class
\paperfontsize 11
\spacing onehalf
\use_hyperref true
\pdf_author "Ron Goldman"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, urlcolor=marineblue, citecolor=blue, pdfstartview={FitH}, hyperfootnotes=false, unicode=true"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\branch intro
\selected 1
\filename_suffix 0
\color background background
\end_branch
\branch graph algos
\selected 1
\filename_suffix 0
\color background background
\end_branch
\branch search in graphs
\selected 1
\filename_suffix 0
\color background background
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 2cm
\rightmargin 1cm
\bottommargin 2cm
\headheight 0cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Title
\paragraph_spacing double

\series bold
\size huge
אלגוריתמים (
\numeric on
0368-2160
\numeric off
)
\end_layout

\begin_layout Author
רון גולדמן
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch intro
inverted 0
status open

\begin_layout Subsection*
נושאי הקורס:
\end_layout

\begin_layout Itemize
אלגוריתמים בגרפים:
\end_layout

\begin_deeper
\begin_layout Itemize
חיפוש בגרפים
\end_layout

\begin_layout Itemize
עצים פורשים מינימליים
\end_layout

\begin_layout Itemize
מסלולים קצרים ביותר
\end_layout

\begin_layout Itemize
זרימה ברשתות
\end_layout

\end_deeper
\begin_layout Itemize
טכניקות אלגוריתמיות:
\end_layout

\begin_deeper
\begin_layout Itemize
תכנות דינאמי
\end_layout

\begin_layout Itemize
תכנות לינארי
\end_layout

\end_deeper
\begin_layout Standard
ספר הקורס:

\family roman
\series bold
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
CLRS
\family roman
\series bold
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
\lang hebrew
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
(לא הכל שם).
\end_layout

\begin_layout Standard
מהו אלגוריתם?
 פרוצדורה חישובית לפתרון בעיה.
 בהינתן איזשהו 
\series bold
קלט
\series default
,
 מבצעים סדרת פעולות ומחזירים 
\series bold
פלט
\series default
.
 נתאר את האלגוריתם בפסאודו-קוד דמוי פייתון.
 האלגוריתם 
\series bold
נכון 
\series default
אם 
\series bold
לכל
\series default
 קלט מוחזר הפלט המתאים.
 פרט להוכחת נכונות,
 נמדוד לכל אלגוריתם בכמה משאבים הוא משתמש (בעיקר 
\series bold
זמן
\series default
,
 כלומר מס' פעולות בסיסיות שנדרשות לחישוב,
 כפונקציה של גודל הקלט,

\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
worst-case
\lang hebrew
).
\end_layout

\begin_layout Standard
במקרה של גרף 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

,
 הגודל נמדד ע
\begin_inset Quotes erd
\end_inset

י הפרמטרים 
\begin_inset Formula $n=\left|V\right|$
\end_inset

 מס' הצמתים,
 
\begin_inset Formula $m=\left|E\right|$
\end_inset

 מס' הקשתות.
\end_layout

\begin_layout Standard
האלגוריתמים בקורס יהיו דטרמיניסטיים (אין
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
random
\lang hebrew
) וסדרתיים (אין אפשרות לעשות דברים במקביל).
\end_layout

\begin_layout Subsubsection*
ייצוג גרפים
\end_layout

\begin_layout Standard
איך מייצגים גרף עבור האלגוריתם?
 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset


\end_layout

\begin_layout Standard

\numeric on
0
\numeric off
.
 רשימת צמתים ורשימת קשתות.
 
\begin_inset Newline newline
\end_inset

לא יעיל לצורך חישובים:
 
\color blue
לא בשימוש
\end_layout

\begin_layout Enumerate
מטריצת שכנויות.
 נניח 
\begin_inset Formula $V=\left\{ 1,2,3,\ldots,n\right\} =\left[n\right]$
\end_inset

,
 המטריצה 
\begin_inset Formula $A=A\left(G\right)\in\left\{ 0,1\right\} ^{n\times n}$
\end_inset

,
 מוגדרת לכל 
\begin_inset Formula $i,j\in\left[n\right]$
\end_inset

 ע
\begin_inset Quotes erd
\end_inset

י 
\begin_inset Formula $a_{ij}=\mathds{1}\left\{ \left(i,j\right)\in E\right\} $
\end_inset

.
 יעיל מאוד לבדוק האם,
 בהינתן 
\begin_inset Formula $i,j\in\left[n\right]$
\end_inset

,
 הקשת 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 בגרף.
\end_layout

\begin_deeper
\begin_layout Itemize
חסרונות:
 גודל הייצוג = 
\begin_inset Formula $\Theta\left(n^{2}\right)$
\end_inset

.
 לכן גם (כמעט) כל אלגוריתם נכון רץ בזמן ריבועי.
 כמו כן,
 כדי לבדוק מהן הקשתות שיוצאות מצומת נתון 
\begin_inset Formula $i$
\end_inset

 צריך לעבור על שורה שלמה במט' 
\begin_inset Formula $A$
\end_inset

 כדי למצוא אותן.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
הייצוג הדיפולטי:

\series default
 רשימות שכנויות
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
adjacency list
\lang hebrew
.
 שומרים מערך 
\begin_inset Formula $\mathrm{Adj}$
\end_inset

 באורך 
\begin_inset Formula $n=\left|V\right|$
\end_inset

,
 כאשר בתא 
\begin_inset Formula $i$
\end_inset

 במערך יש רשימה מקושרת של כל 
\begin_inset Formula $j$
\end_inset

 עבורו 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
יתרון:
 גודל הייצוג לינארי בגודל הקלט = 
\begin_inset Formula $\Theta\left(n+\sum_{i\in V}\deg^{+}\left(i\right)\right)=\Theta\left(n+m\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
חסרון:
 לא יעיל לבדוק בזמן קבוע אם 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

 עבור 
\begin_inset Formula $i,j$
\end_inset

 נתונים.
\end_layout

\end_deeper
\begin_layout Remark
סדר הצמתים בתוך 
\begin_inset Formula $\mathrm{Adj}\left[i\right]$
\end_inset

 לא נתון.
 בפרט,
 אי אפשר להניח שהרשימה ממוינת.
\end_layout

\begin_layout Remark
יעיל לעבור על כל הקשתות שיוצאות מצומת נתון 
\begin_inset Formula $i$
\end_inset

.
 (לוקח זמן קבוע פר קשת).
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
בשני הייצוגים אפשר לעבוד עם גרפים ממושקלים,
 כלומר פונ' 
\begin_inset Formula $w:E\xrightarrow{}\mathbb{R}$
\end_inset

.
 ואז נייצג את המבנים השונים באופן דומה בהתאם.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
לאותו גרף ייתכנו מספר ייצוגים (שקולים) ע
\begin_inset Quotes erd
\end_inset

י רשימות שכנויות.
\end_layout

\end_inset


\end_layout

\begin_layout Part
אלגוריתמים בגרפים
\end_layout

\begin_layout Standard
\begin_inset Branch graph algos
inverted 0
status open

\begin_layout Chapter
חיפוש בגרפים
\end_layout

\begin_layout Standard
\begin_inset Branch search in graphs
inverted 0
status open

\begin_layout Standard
נראה שני אלגוריתמים לבעיה:
\end_layout

\begin_layout Enumerate
חיפוש לרוחב
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
BFS = Breadth First Search
\lang hebrew
.
\end_layout

\begin_layout Enumerate
חיפוש לעומק
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
DFS = Depth First Search
\lang hebrew
.
\end_layout

\begin_layout Standard
ההבדל הוא בסדר בו עוברים על הצמתים.
 ב-
\lang english
BFS
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
\lang hebrew
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
עוברים ראשית על שכניו של צומת המקור,
 ואז על שכניהם וכן הלאה.
\end_layout

\begin_layout Problem
\begin_inset Argument 1
status open

\begin_layout Plain Layout
חיפוש בגרפים
\end_layout

\end_inset

נתון גרף (מכוון או לא) 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 וצומת מקור 
\begin_inset Formula $s\in V$
\end_inset

.
 
\end_layout

\begin_layout Problem
מטרות:
 
\end_layout

\begin_deeper
\begin_layout Enumerate
למצוא אילו צמתיפ בְ-
\begin_inset Formula $V$
\end_inset

 נגישים מ-
\begin_inset Formula $s$
\end_inset

,
 כלומר יש מסלול 
\begin_inset Formula $s\rightsquigarrow v$
\end_inset

.
\end_layout

\begin_layout Enumerate
עבור צומת 
\begin_inset Formula $v$
\end_inset

 שנגיש מ-
\begin_inset Formula $s$
\end_inset

,
 למצוא מסלול קצר ביותר 
\begin_inset Formula $s\rightsquigarrow v$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Section
אלגוריתם
\family roman
\series bold
\shape up
\size larger
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
BFS
\end_layout

\begin_layout Standard
במהלך הריצה,
 אלג'
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
BFS
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
\lang hebrew
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
מתחזק לכל צומת 
\begin_inset Formula $v\in V$
\end_inset

 את:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{color}\left[v\right]$
\end_inset

 = צבע מבין:
 לבן,
 אפור,
 שחור
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{d}\left[v\right]$
\end_inset

 = אורך מסלול מ-
\begin_inset Formula $s$
\end_inset

 לְ-
\begin_inset Formula $v$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\pi\left[v\right]$
\end_inset

 = מקודד מסלול קצר ביותר מ-
\begin_inset Formula $s$
\end_inset

 לְ-
\begin_inset Formula $v$
\end_inset


\end_layout

\begin_layout Standard
וכן יתחזק תור
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\nospellcheck default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
\lang english
FIFO
\lang hebrew
,
 
\begin_inset Formula $Q$
\end_inset

,
 של צמתים שמחכים לסריקת קשתות יוצאות מהם.
\end_layout

\begin_layout Standard

\lang english
\begin_inset Float algorithm
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\lang english
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Formula $\mathrm{BFS}\left(G,s\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\lang english
For 
\begin_inset Formula $u\in V$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate

\lang english
\begin_inset Formula $\mathrm{d}\left[u\right]\xleftarrow{}\infty$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Formula $\mathrm{color}\left[u\right]\xleftarrow{}\mathrm{white}$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Formula $\pi\left[u\right]\xleftarrow{}\mathrm{NULL}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\lang english
\begin_inset Formula $\mathrm{color}\left[s\right]\xleftarrow{}\mathrm{gray}$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Formula $\mathrm{d}\left[s\right]\xleftarrow{}0$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Formula $Q=\left(s\right)$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
while 
\begin_inset Formula $Q$
\end_inset

 is not empty:
\end_layout

\begin_deeper
\begin_layout Enumerate

\lang english
\begin_inset Formula $u\xleftarrow{}$
\end_inset

head of 
\begin_inset Formula $Q$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
delete 
\begin_inset Formula $u$
\end_inset

 from 
\begin_inset Formula $Q$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
for 
\begin_inset Formula $v\in\mathrm{Adj}\left[u\right]$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\lang english
if 
\begin_inset Formula $\mathrm{color}\left[v\right]=\mathrm{white}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate

\lang english
\begin_inset Formula $\mathrm{color}\left[v\right]\xleftarrow{}\mathrm{gray}$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Formula $\mathrm{d}\left[v\right]\xleftarrow{}\mathrm{d}\left[u\right]+1$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Formula $\pi\left[v\right]\xleftarrow{}u$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
add 
\begin_inset Formula $v$
\end_inset

 to 
\begin_inset Formula $Q$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\lang english
\begin_inset Formula $\mathrm{color}\left[u\right]\xleftarrow{}\mathrm{black}$
\end_inset


\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
